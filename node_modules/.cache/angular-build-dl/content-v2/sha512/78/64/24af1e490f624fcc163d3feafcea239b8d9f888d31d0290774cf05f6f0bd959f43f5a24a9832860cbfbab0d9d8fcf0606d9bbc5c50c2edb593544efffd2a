{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/views/init.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/views/todo-list.component.ts","webpack:///src/app/guards/resolve.guard.ts","webpack:///src/app/views/optimized-list.component.ts","webpack:///src/app/provider/item.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/views/login.component.ts","webpack:///src/app/globals.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","router","InitComponent","navigateByUrl","route","routes","path","component","redirectTo","pathMatch","AppModule","forRoot","ToDoListComponent","goal_form_open","task_form_open","goal_opened","name","optimalList","barFormControl","validateGoalNum","items","taskList","goals","goalList","length","children_num_validator","goals_num_validator","i","console","log","num_children","undefined","alert","e","document","getElementById","style","display","goal","closeGoal","event","goal_desc","time_est","goal_time_est","deadline","goal_deadline","value","goal_val","push","index","indexOf","splice","children","tasks","item","task_desc","task_time_est","task_deadline","today","task_today","addGoal","addItem","popup","classList","toggle","openGoal","myFunction_example","myFunction","myFunction_finish","ResolveGuard","itemService","getOptimalList","OptimizedListComponent","activatedRoute","finalList","final_optList","optList","optTaskList","re","snapshot","data","goalname_map","goal_map","temp","slice","includes","getGoalname","ele","target","closest","getAttribute","opacity","setAttribute","str","splitStr","toLowerCase","split","charAt","toUpperCase","substring","join","tag","exec","item_name","Symbol","replace","prefix","time","match","toString","suffix","ItemService","http","gamifyUrl","project","node","id","nm","lm","ch","parentId","j","td","task","JSON","stringify","list","obj","headers","options","makeProject","typical_hours","make_typical_hours","today_hours","make_today_hours","body","currentIntentionsList","projects","timezoneOffsetMinutes","updated","userkey","bias","scale","time_frame","post","resolve","AppRoutingModule","LoginComponent","Globals","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","then","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Globals } from './globals';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  \n    \n  <div id=\"outlet-wrapper\">\n    <router-outlet></router-outlet>\n  </div>\n\n\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n\n  constructor(public router: Router) {\n\n  }\n\n  ngAfterViewInit() {\n\n  } \n\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"init\",\n  template: `\n  \n   \n  <div >\n\n    <div class=\"logo-wrapper\">\n\n      <img src=\"./assets/images/logo.png\"/>\n      \n    </div>\n\n    <div>\n\n      <span>AI Powered To-Do List Gamification Demo</span> \n      \n    </div>\n    \n    <div>\n\n      <span>Rationality Enhancement Group</span> \n      \n    </div>\n    \n    <div>\n\n      <div class=\"btn bottom\" (click)=\"route()\">Get started</div>\n\n    </div>\n\n  </div>\n\n\n\n  `,\n  styles: [\n    `\n    :host {\n      text-align:center;\n    }\n\n    .logo-wrapper {\n      display: flex;\n      justify-content:center;\n      align-items:center;\n      height: 200px;\n      margin-bottom: 20px;\n    }\n\n    .logo-wrapper img {\n      height: 100%;\n    }\n\n\n\n    `,\n  ],\n})\nexport class InitComponent {\n\n  constructor(public router: Router) {\n\n  }\n\n  \n  public route(){\n\n    this.router.navigateByUrl('/list') //skip login.component.ts\n  } \n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { InitComponent } from './views/init.component'\nimport { ToDoListComponent } from './views/todo-list.component'\nimport { LoginComponent } from './views/login.component'\n\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { ItemService } from './provider/item.service';\nimport { OptimizedListComponent } from './views/optimized-list.component';\nimport { ResolveGuard } from './guards/resolve.guard';\n\n\nconst routes: Routes = [\n  { path: 'intro', component: InitComponent },\n  { path: 'list', component: ToDoListComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'optimized', component: OptimizedListComponent },\n  { path: '**', redirectTo: '/intro', pathMatch: 'full' },\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InitComponent,\n    ToDoListComponent,\n    LoginComponent,\n    OptimizedListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n\n    MatSliderModule,\n    MatButtonModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule \n  ],\n  providers: [ ItemService, ResolveGuard],\n  \n  exports: [\n    RouterModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {filter, map, min, startWith} from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Globals } from '../globals';\nimport { Goal, Item} from './item';\nimport { getAllLifecycleHooks } from '@angular/compiler/src/lifecycle_reflector';\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\n\n\n@Component({\n  selector: 'todo-list',\n  template: `\n  <div class=\"btn top-fixed\" (click)=\"openGoal($event)\" ><div>Add Goals</div></div>\n \n   \n   <div style=\"text-align: center; margin-top:10px; color: red;\"> Please add at least <b>5</b> goals and at least <b>2</b> subgoals for each.</div>\n    \n    <div style=\"text-align: left; margin-top:10px; margin-left:20%; margin-right:15%;\">\n    <b>Goal</b>: A goal that you need to or want to achieve within 2 months. <br>\n    <b>Subgoal</b>: A subordinate goal that helps you achieve a goal.<br>\n    \n    <div class=\"popup\" (click)=\"myFunction_example()\" id=\"hoverText\" style=\" text-align: left; margin-top:10px;  cursor: pointer; color:blue;\" >\n    <img src=\"assets/images/information.png\" alt=\"info icon\" width=\"20px\" height=\"20px\" > Example for a good goal\n    <span  class=\"popuptext\" id=\"myPopup_example\">\n    It's recommended to set some ongoing projects such as \"finish my thesis\" or \"finish a term paper\" as your goals.<br>\n    In comparison, \"cooking dinner on X'mas\" isn't a suitable goal. \n    \n    <b>Example</b>:\n    <br>Goal: Finish my term paper\n    <br>&nbsp;&nbsp;&nbsp;&nbsp;|----General research [5 hrs]\n    <br>&nbsp;&nbsp;&nbsp;&nbsp;|----Finalize a topic [2 hrs]\n    <br>&nbsp;&nbsp;&nbsp;&nbsp;|----Do more research [5 hrs]\n    <br> &nbsp;&nbsp;&nbsp;&nbsp;|----Structure the paper [1hr]\n    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and so on... \n    </span>\n    </div>\n\n<br>\n    <div class=\"popup\" (click)=\"myFunction()\" id=\"hoverText\" style=\" text-align: left; margin-top:10px; cursor: pointer; color:blue;\" >\n    <img src=\"assets/images/information.png\" alt=\"info icon\" width=\"20px\" height=\"20px\" > What are the parameters?\n    <span  class=\"popuptext\" id=\"myPopup\">\n    <b>Description</b> \n    <br>Give a name for this goal/subgoal! \n    <br><br><b>Value</b>\n    <br>How important is this goal for you? Try to quantify it!\n    <br>Think about why do you need to accomplish this goal. \n    <br>Will something good or bad happen if you achieve it, or not achieve it? \n    <br>Values are relative numbers. \n    <br><br><b>Estimated Time</b>\n    <br>How much time do you need to achieve this goal/subgoal?\n    <br><br><b>Deadline</b>\n    <br>If there is a deadline for this goal/subgoal. Fill it in!\n\n    <br></span>\n</div>\n<br>\n<div class=\"popup\" (click)=\"myFunction_finish()\" id=\"hoverText\" style=\" text-align: left; margin-top:10px; cursor: pointer; color:blue;\" >\n    <img src=\"assets/images/information.png\" alt=\"info icon\" width=\"20px\" height=\"20px\" > What to do when I finish adding goals?\n    <span  class=\"popuptext\" id=\"myPopup_finish\">\n    <b>Next step</b> \n    <br>Please click on <b>Get My Gamifying List</b> button when you finish.\n    You will see the result page in a few seconds.\n    <br></span>\n</div>\n\n</div>\n\n\n  \n    <div class=\"form-popup\" id=\"task-form\" *ngIf = \"task_form_open == true\">\n      \n      <form class=\"form-container\">\n        <h1>Add Subgoal in Goal {{goal_opened.name}}</h1>\n        <label for=\"item-desc\"></label>\n        <input [(ngModel)]=\"task_desc\" type=\"text\" placeholder=\"Subgoal Description (*Required)\" name=\"item-desc\" required>\n\n        <label for=\"item-time\"></label>\n        <input [(ngModel)]=\"task_time_est\" type=\"number\" placeholder=\"Enter Time Estimate (Hours) (*Required)\" name=\"item-time-est\" required >\n\n        <label for=\"item-deadline\"></label>\n        <input [(ngModel)]=\"task_deadline\" type=\"date\" placeholder=\"Enter Deadline (YYYY.MM.DD) (optional)\" name=\"item-deadline\">\n        \n        <!--\n        <label for=\"item-today\"></label>\n        <input [(ngModel)]=\"task_today\" type=\"radio\" id=\"nt\" name=\"item-today\" value=\"Not Today\"> <label for = \"nt\"> Not Today </label>\n        <input [(ngModel)]=\"task_today\" type=\"radio\" id=\"t\" name=\"item-today\" value=\"Today\"> <label for = \"t\"> Today </label>\n        -->\n\n        <!--\n          <b>Not Today</b>\n          <label class=\"switch\">\n            <input type=\"checkbox\"x>\n            <span class=\"slider round\"></span>\n          </label>\n          <b>Today</b>\n        -->\n       \n        <button type=\"submit\" class=\"btn add\" (click)=\"validateForm_task($event)\">Add</button>\n        <button type=\"submit\" class=\"btn cancel\" (click)=\"closeItem($event)\">Cancel</button>\n      </form>\n    </div>\n\n    <div class=\"form-popup\" id=\"goal-form\" *ngIf = \"goal_form_open == true\">\n      <form class=\"form-container\">\n        <h1>Add Goal</h1>\n        <label for=\"goal-desc\"></label>\n        <input [(ngModel)]=\"goal_desc\" type=\"text\" placeholder=\"Goal Description (*Required)\" name=\"goal-desc\" required>\n\n        <label for=\"goal-val\"></label>\n        <input [(ngModel)]=\"goal_val\" type=\"number\" placeholder=\"Goal Value (0-9999) (*Required)\" name=\"goal-val\"  min=\"0\" max=\"9999\" required>\n\n        <label for=\"goal-time\"></label>\n        <input [(ngModel)]=\"goal_time_est\" type=\"number\" placeholder=\"Enter Time Estimate (Hours) (*Required)\" name=\"goal-time-est\">\n\n        <label for=\"goal-deadline\" style=\"font-size: 12px; color: gray; margin-left: 6px\">Enter a deadline (optional)</label>\n        <input [(ngModel)]=\"goal_deadline\" type=\"date\" placeholder=\"Enter Deadline (YYYY.MM.DD)\" name=\"goal-deadline\">\n       \n        <button type=\"submit\" class=\"btn add\" (click) = \"validateForm_goal($event)\">Add</button>\n        <button type=\"submit\" class=\"btn cancel\" (click)=\"closeGoal($event)\">Cancel</button>\n      </form>\n      </div>\n\n    \n    <div class=\"form-popup\" id=\"edit-goal-form\" *ngIf = \"goal_form_open == true\">\n      <form class=\"form-container\">\n        <h1>Edit Goal: {{goal_opened.name.name}}</h1>\n        <h4>Only enter what you want to change.</h4>\n        <label for=\"goal-desc\" style=\"font-size: 12px; color: gray; margin-left: 6px\">Goal Name</label>\n        <input [(ngModel)]=\"goal_desc\"  type=\"text\" placeholder={{goal_opened.name.name}} name=\"goal-desc\" required>\n\n        <label for=\"goal-val\" style=\"font-size: 12px; color: gray; margin-left: 6px\"> Goal Value</label>\n        <input [(ngModel)]=\"goal_val\" type=\"number\" placeholder={{goal_opened.name.value}} name=\"goal-val\"  min=\"0\" max=\"9999\" required>\n\n        <label for=\"goal-time\" style=\"font-size: 12px; color: gray; margin-left: 6px\">Goal Time Estimation (hrs)</label>\n        <input [(ngModel)]=\"goal_time_est\" type=\"number\" placeholder={{goal_opened.name.time_est}} name=\"goal-time-est\">\n\n        <label for=\"goal-deadline\" style=\"font-size: 12px; color: gray; margin-left: 6px\">Enter a deadline (optional)</label>\n        <input [(ngModel)]=\"goal_deadline\" type=\"date\" placeholder=\"Enter Deadline (YYYY.MM.DD)\" name=\"goal-deadline\">\n       \n        <button type=\"submit\" class=\"btn add\" (click) = \"updateGoal($event, goal_opened.name)\">Submit</button>\n        <button type=\"submit\" class=\"btn cancel\" (click)=\"closeGoal($event)\">Cancel</button>\n      </form>\n      </div>\n\n\n      <div class=\"btn bottom-fixed\" (click)=\"route()\" >Get My Gamifying List</div>\n    \n    \n    <div class=\"goal-wrapper\" id=\"goal-display\" *ngIf = \"goals.length > 0\">\n   \n    <div class=\"popup\" (click)=\"myFunction_info()\"  id=\"hoverText\" style=\"text-align: left; margin-top:10px; margin-left:45%;cursor: pointer; color:blue;\" ><img src=\"assets/images/information.png\" alt=\"info icon\" width=\"20px\" height=\"20px\" > Icons\n    <span  class=\"popuptext_info\" id=\"myPopupInfo\">\n    \n    <div class=\"icon plus\" style=\"text-align:center;cursor:not-allowed; \" ><div> +</div></div>\n    <span>Add a subgoal </span><br>\n    <div class=\"icon plus\"  style=\"text-align:center; cursor:not-allowed\"><div> -</div></div>\n    <span>Delete the goal  </span>\n    <div style=\"cursor:not-allowed; padding-left:5px;  \"><img src=\"assets/images/Edit_icon.svg.png\" alt=\"edit icon\" width=\"20px\" height=\"20px\" >       Edit the goal</div>\n    \n   \n    </span>\n    </div>\n\n\n    <ul>\n        <li *ngFor = \"let goal of goals\" class=\"goal-item\">\n          <div> Goal: <b>{{goal.name}}</b> <br> Value: {{goal.value}} <br>Time Estimation:  {{goal.time_est}} hr\n          <br> Deadline: / {{goal.deadline}}  \n          <div>\n              <div class=\"icon plus\" (click)=\"openItem($event, goal)\"><div>+</div></div>\n              <div class=\"icon plus\" (click)=\"deleteGoal($event, goal)\" id= \"hoverText\" ><div>-</div></div>\n              <div style= \"cursor:pointer;\" (click)=\"editGoal($event, goal)\" ><img src=\"assets/images/Edit_icon.svg.png\" alt=\"edit icon\" width=\"20px\" height=\"20px\" > </div>\n            </div>\n            <div *ngIf = \"goal.tasks !== undefined\">\n              <div *ngIf = \"goal.tasks.length > 0\">\n              <!--<div id=\"goal-sum-time\" > Time Estimation:  {{goal.goal_time_est}} </div>-->\n      \n              <div> ------ Subgoals ------\n              <ul>\n                  <li *ngFor = \"let task of goal.tasks\" class=\"task-item\">\n                     <!--\n                        <div> Task: {{task.name}} {{task.time_est}}\n                      -->\n                      <div> {{task.name}} <br/> Time: {{task.time_est}} hr\n                      <br> Deadline: / {{task.deadline}}  \n                       <div class=\"del-wrapper\"> \n                          <div class=\"del\" (click)=\"deleteItem($event, goal, task)\"><div>-</div></div>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n   \n\n  `,\n  styles: [\n    `\n    /* Button used to open the contact form - fixed at the bottom of the page */\n    .open-button {\n      background-color: #555;\n      color: white;\n      padding: 16px 20px;\n      border: none;\n      cursor: pointer;\n      opacity: 0.8;\n      position: fixed;\n      bottom: 23px;\n      right: 28px;\n      width: 280px;\n    }\n\n    /* The popup form - hidden by default */\n    .form-popup {\n      display: none;\n      position: fixed;\n      bottom: 10%;\n      right: 15px;\n      border: 3px solid #f1f1f1;\n      z-index: 9;\n    }\n\n    /* Add styles to the form container */\n    .form-container {\n      max-width: 300px;\n      padding: 10px;\n      background-color: white;\n    }\n\n    /* Full-width input fields */\n    .form-container input[type=text],\n    input[type=number], input[type=date], .form-container input[type=password] {\n      width: 92%;\n      height: 40px;\n      border: 1px solid 615757;\n      /* box-sizing: unset; */\n      padding: 6px;\n      margin: 6px;\n     \n    }\n    /* hide arrows in the number input box - Chrome, Safari, Edge, Opera */\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n      }\n/* hide arrows in the number input box in FireFox */\n    input[type=number]{\n      -moz-appearance: textfield;\n    }\n\n\n    /* When the inputs get focus, do something */\n    .form-container input[type=text]:focus, input[type=number]:focus, input[type=date]:focus, .form-container input[type=password]:focus {\n      background-color: #ddd;\n      outline: none;\n    }\n\n    /* Set a style for the submit/login button */\n    .form-container .btn {\n      background-color: #4CAF50;\n      color: white;\n      border: none;\n      cursor: pointer;\n      width: 100%;\n      margin-bottom:10px;\n      opacity: 0.8;\n      margin: 10px;\n      min-inline-size: -webkit-fill-available;\n    }\n\n    /* Add a red background color to the cancel button */\n    .form-container .cancel {\n      background-color: red;\n    }\n\n    .form-container .add{\n    }\n\n    /* Add some hover effects to buttons */\n    .form-container .btn:hover, .open-button:hover {\n      opacity: 1;\n    }\n\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 60px;\n      height: 34px;\n    }\n    \n  \n    .switch input { \n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n    \n    .slider {\n      position: absolute;\n      cursor: pointer;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: #ccc;\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n    \n    .slider:before {\n      position: absolute;\n      content: \"\";\n      height: 26px;\n      width: 26px;\n      left: 4px;\n      bottom: 4px;\n      background-color: white;\n      -webkit-transition: .4s;\n      transition: .4s;\n    }\n    \n    input:checked + .slider {\n      background-color: #2196F3;\n    }\n    \n    input:focus + .slider {\n      box-shadow: 0 0 1px #2196F3;\n    }\n    \n    input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n    \n    /* Rounded sliders */\n    .slider.round {\n      border-radius: 34px;\n    }\n    \n    .slider.round:before {\n      border-radius: 50%;\n    }\n\n    .item-desc-wrapper {\n\n      display:flex;\n      border: 5px solid gray;\n\n    }\n    .desc-field {\n      width: 50%;\n    }\n\n\n      .goal-wrapper ul{\n       width: 100%;\n       display: inline-grid;\n       overflow: auto;\n       justify-content: space-between;\n       max-height: -webkit-fill-available;\n       grid-template-columns: 50% 50%;\n       margin-bottom:30px;\n   }\n      \n      \n\n      .goal-item{\n        width: 90%;\n        min-width: 300px;\n        min-height: 300px;\n        display: inline-block;\n        text-align: center;\n        background: #E4E6C3;\n        border-radius: 25px;\n        padding: 10px;\n        margin: 10px;\n        \n      }\n      .task-wrapper{\n        display: grid;\n      }\n      .task-item{\n        width: 80%;\n        min-height: 100px;\n        min-width: 50%;\n        display: block;\n        text-align: center;\n        background: #F7F7E3;\n        border-radius: 25px;\n        margin: 5px;\n        justify-content: space-between;\n        padding: 8px;\n    }\n       \n      \n      .btn.bottom-fixed {\n        position: relative;\n        margin-top: 30px;\n        bottom: 10px;\n        width: 35%;\n        background-color: #BE9F9C;\n      }\n     \n     \n      .del-wrapper{\n        position: relative;\n      }\n      .del{\n        position: relative;\n        top: 0px;\n        cursor: pointer;\n        display: inline-grid;\n        width: 5%;\n        min-width: 20px;\n        height: 5%;\n        min-height: 20px;\n        margin-left: 10px;\n        margin-right: 10px;\n        margin-bottom: 10px;\n        background-size: 100%;\n        color: white;\n        background-color: red;\n        border-radius: 100%;\n        background-repeat: no-repeat;\n        background-position: center center;\n      }\n    `\n  ]\n})\n\nexport class ToDoListComponent {\n\n  \n  public goal_val : number; \n  public goal_desc: string;\n  public goal_deadline: string;\n  public goal_time_est: number;\n  public goal_form_open = true;\n\n  public task_desc: string;\n  public task_deadline: string;\n  public task_time_est: number;\n  public task_today: string;\n  public task_form_open = true;\n  public goal_opened =  <Goal>({\n    name: \"DEFAULT\",\n  });\n\n  public optimalList = []\n  public barFormControl = new FormControl()\n  public validateGoalNum = false;\n  public get taskList() {\n\n    return Globals.taskList;\n  }\n\n  public get taskLength() :number {\n    return this.taskList.length\n  }\n\n  public items = Globals.taskList\n  public goals = Globals.goalList\n  \n\n  constructor(public router: Router) {\n\n  }\n\n\n  get itemsList() {\n\n    return this.items\n  }\n\n\n  ngAfterViewInit() {\n\n\n  }\n\n  public route(){\n    // console.log(\"Go to Optimized\");\n    var children_num_validator = true;\n    var goals_num_validator = false\n    for(let i=0; i<this.goals.length; i++){\n      console.log(\"check num of children\")\n      console.log(this.goals[i], this.goals[i].num_children);\n      if(this.goals[i].num_children == undefined || this.goals[i].num_children < 2 ){\n        console.log(this.goals[i], this.goals[i].num_children);\n        children_num_validator = false;\n        alert(\"Please add at least 2 subgoals for each goal\");\n        return false;\n      }\n    }\n\n    if(this.goals.length>=5){\n      goals_num_validator = true;\n    }else{\n      alert(\"Please add at least 5 goals\");\n      return false;\n    }\n\n    if(goals_num_validator && children_num_validator){\n      this.router.navigateByUrl('/optimized')\n    }else{\n      alert(\"Please fulfill the requirements before you continue!\");\n      return false;\n    }\n\n  } \n\n\n  openGoal(e?) {\n    // console.log(\"in openGoal\");\n    // console.log(this.goal_form_open)\n    // this.closeItem(e);\n    //close other forms\n    document.getElementById(\"edit-goal-form\").style.display = \"none\";\n    document.getElementById(\"task-form\").style.display = \"none\";\n\n    if(this.goal_form_open == true){\n      document.getElementById(\"goal-form\").style.display = \"block\";\n    }\n    // this.goal_form_open = false;\n    // console.log(this.goal_form_open);\n    // console.log(\"Goal Length\");\n    // console.log(this.goals.length);\n    // return true\n\n  }\n  \n  openItem(e?, goal?) {\n    // console.log(\"In openItem\");\n    //close other forms\n    document.getElementById(\"goal-form\").style.display = \"none\";\n    document.getElementById(\"edit-goal-form\").style.display = \"none\";\n    this.goal_opened = goal;\n    // console.log(goal);\n    // console.log(this.goals.indexOf(goal));\n    this.closeGoal(e);\n    document.getElementById(\"task-form\").style.display = \"block\";\n    return true\n  }\n\n  closeGoal(e?){\n    // console.log(\"Close Goal Form\");\n    this.goal_form_open = true;\n    document.getElementById(\"goal-form\").style.display = \"none\";\n    document.getElementById(\"edit-goal-form\").style.display = \"none\";\n   // document.getElementById(\"task-form\").style.display = \"none\";\n    this.goal_opened;\n  }\n\n  closeItem(e?){\n    // console.log(\"Close Item Form\");\n    this.task_form_open = true;\n    document.getElementById(\"task-form\").style.display = \"none\";\n    \n  }\n\n  addGoal(event?) {\n    this.goal_form_open = true;\n    // console.log(this.goal_desc)\n    var goal = <Goal>({\n      name: this.goal_desc,\n      time_est: this.goal_time_est,\n      deadline: this.goal_deadline,\n      value: this.goal_val\n    });\n    if(this.goal_desc != undefined){\n      this.goals.push(goal);\n      this.goal_opened = goal;\n    //  console.log(goal);\n    }\n    this.goal_desc = undefined;\n    this.goal_val = undefined;\n    this.goal_deadline = undefined;\n    this.goal_time_est = undefined;\n    \n  //  console.log(\"------all goals-----\");\n //   console.log(this.goals);\n\n  }\n\n  deleteGoal(event, goal){\n    const index = this.goals.indexOf(goal);\n    if(index > -1){\n      this.goals.splice(index,1);\n    }\n  }\n\n  \n\n  editGoal(event, goal){\n    this.goal_opened = goal;\n    if(this.goal_form_open == true){\n      document.getElementById(\"edit-goal-form\").style.display = \"block\";\n    }\n    //close other forms\n    document.getElementById(\"goal-form\").style.display = \"none\";\n    document.getElementById(\"task-form\").style.display = \"none\";\n    const index = this.goals.indexOf(goal);\n    //placeholder for submitted values\n    this.goal_opened = <Goal>({\n      name: goal,\n      time_est: this.goals[index].time_est,\n      deadline: this.goals[index].deadline,\n      value: this.goals[index].value\n    });\n\n \n  }\n\n  \n  updateGoal(event, goal){\n    const index = this.goals.indexOf(goal);\n   // console.log(index);\n   \n    this.goal_opened = goal;\n   \n    //console.log(\"+*+* before update: \", this.goal_opened);\n   // console.log(\"+*+* before update: \", goal);\n    if(this.goal_desc == undefined || this.goal_desc==\"\"){\n      this.goal_desc = goal.name;\n   //   console.log(\"update goal name: \", this.goal_desc);\n    }\n    if(this.goal_time_est == null){\n      this.goal_time_est = goal.time_est;\n    }\n    if(this.goal_val == null){\n      this.goal_val = goal.value;\n    }\n    if(this.goal_deadline == undefined || this.goal_deadline == \"\"){\n      this.goal_deadline = goal.deadline;\n    }\n   \n    goal = <Goal>({\n      name: this.goal_desc,\n      time_est: this.goal_time_est,\n      deadline: this.goal_deadline,\n      value: this.goal_val,\n    });\n     //get child nodes\n     if ('tasks' in this.goals[index]){\n      const children = this.goals[index].tasks;\n      goal[\"tasks\"]=children;\n    }\n      if('num_children' in this.goals[index]){\n      const num_children = this.goals[index].num_children;\n      goal[\"num_children\"] = num_children;\n    }\n  //  console.log(\"*+*+updated goal: \", goal);\n  //  console.log(\"*+*+before update goals: \", this.goals);\n  //update to the goals\n    this.goals[index] = goal;\n  //  console.log(\"*+*+updated goals: \", this.goals);\n    document.getElementById(\"edit-goal-form\").style.display = \"none\";\n    //all values to undefined.\n    this.goal_desc = undefined;\n    this.goal_val = undefined;\n    this.goal_deadline = undefined;\n    this.goal_time_est = undefined;\n    \n  }\n\n\n    \n  \n\n  addItem(event, goal) {\n    // console.log(\"In AddItem\");\n    // console.log(goal)\n    var item = <Item>({\n      name: this.task_desc,\n      time_est: this.task_time_est,\n      deadline: this.task_deadline,\n      today: this.task_today == \"Not Today\" ? false: true,\n      \n    });\n    // console.log(item);\n    if(this.task_desc != undefined){\n      \n      // console.log(goal);\n      \n      if('num_children' in goal){\n        // console.log(\"HAVE CHILD\");\n        goal.tasks.push(item);\n        goal.num_children += 1;\n       \n      }\n      else{\n        // console.log(\"FIRST CHILD\");\n        goal.tasks = [];\n        goal.tasks.push(item);\n        goal.num_children = 1;\n       \n      }\n \n    }\n    this.task_desc = undefined;\n    this.task_today = undefined;\n    this.task_deadline = undefined;\n    this.task_time_est = undefined;\n    \n  }\n\n  deleteItem(event, goal, item){\n    // console.log(\"In deleteItem\");\n    // console.log(goal);\n    // console.log(item);\n    const index = goal.tasks.indexOf(item);\n    // console.log(index);\n    if(index > -1){\n      goal.tasks.splice(index, 1);\n      goal.num_children -= 1;\n    }\n  }\n\n \n  validateForm_goal() {\n    // console.log(\"validate\")\n    // console.log(this.goal_desc);\n    // console.log(this.goal_time_est);\n    // console.log(this.goal_val);\n\n    if (this.goal_desc == undefined && this.goal_time_est == undefined && this.goal_val == undefined){\n    alert(\"please fill the form!\")\n    }else{\n      console.log(\"there's some input!\");\n    if (this.goal_desc == \"\") {\n      alert(\"Description must be filled out\");\n      return false;\n    }\n    if (this.goal_val==null)\n    {\n      alert(\"Goal value must be filled out\");\n      return false;\n    }\n    if (this.goal_time_est == null) {\n      alert(\"Time estimation must be filled out\");\n      return false;\n    }\n\n    //pass validator and add goal\n       this.addGoal();\n\n  \n  }\n  }\n  validateForm_task(){\n    // console.log(\"validate subgoal\")\n    // console.log(this.task_desc);\n    // console.log(this.task_time_est);\n    if (this.task_desc == undefined && this.task_time_est == undefined){\n      alert(\"please fill the form!\")\n    }else{\n    if (this.task_desc == \"\") {\n      alert(\"Description must be filled out\");\n      return false;\n    }\n  \n    if (this.task_time_est == null) {\n      alert(\"Time estimation must be filled out\");\n      return false;\n    }\n    //pass validator and add item\n       this.addItem(event,this.goal_opened);\n  }\n  }\n  myFunction() {\n    var popup = document.getElementById(\"myPopup\");\n    popup.classList.toggle(\"show\");\n  }\n  myFunction_info() {\n    var popup = document.getElementById(\"myPopupInfo\");\n    popup.classList.toggle(\"show\");\n  }\n  myFunction_finish(){\n    var popup = document.getElementById(\"myPopup_finish\");\n    popup.classList.toggle(\"show\");\n  }\n    myFunction_example(){\n    var popup = document.getElementById(\"myPopup_example\");\n    popup.classList.toggle(\"show\");\n  }\n \n}\n\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../provider/item.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResolveGuard implements Resolve<any> {\n\n  constructor(private itemService:ItemService){\n\n  }\n  resolve(){\n    console.log(\"Running Resovle Guard. API Running\");\n    return this.itemService.getOptimalList();\n  }\n  \n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Globals } from \"../globals\";\nimport { ItemService } from \"../provider/item.service\";\nimport { Item, outputItem } from \"./item\";\n\n@Component({\n  selector: \"optimized\",\n  template: `\n  \n<!--\n  <h4>Optimized To-Do List</h4>\n\n  <div id=\"todo-list-wrapper\">\n\n  <ul *ngIf=\"optList.length>0\">\n    <li>\n      <div class=\"item-amount\">Task</div>\n      <div class=\"item-amount\">Psuedo Reward</div>\n      <div class=\"item-amount\">Estimated Time</div>\n    </li>\n    <p>ng For: item of optList</p>\n    <li *ngFor=\"let item of optList\" (click)=\"toggleOpacity($event)\">\n  <div class=\"item-amount\">{{getHumanReadable(item.nm)}}</div>\n  <div class=\"item-amount\">{{item.val}}</div>\n  <div class=\"item-amount\">{{getTime(item.nm)}}</div>\n  </li>\n  </ul>\n-->\n\n<div>\n  <h2>Your prioritized goals</h2>\n  <p>Dear participant, we aim at brining the long-term value to the present in order to help people make a better decision. \n  In other words, our AI algorithm suggests a rational prioritized list for you. </p>\n  <br>\n\n  <ul>\n  <div>\n  <li *ngFor=\"let item of final_optList\"></li><br>\n  </div>\n  </ul>\n\n  <h3><b>What does the algorithm take into account?</b></h3>\n  1. The number of your goals and tasks<br>\n  2. The value of your goals<br>\n  3. The estimate time of your goals and tasks<br>\n  \n  <br>\n  To sum it up, our AI algorithm suggests the following prioritized goal list for you:<br>\n  (The first suggestion is the most valuable goal of yours.)\n  \n  <div class=\"item-amount\" style=\"color:blue; font-size:24 px\" >{{getGoalname(finalList)}}</div>\n\n\n \n\n</div>\n\n\n  `,\n  styles: [\n    `\n    #todo-list-wrapper {\n      margin-bottom: 100px;\n    }\n    \n    #todo-list-wrapper ul {\n    }\n  \n    #todo-list-wrapper ul li {\n      position: relative;\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      box-sizing:border-box;\n      padding: 2.5%;\n      text-align:center;\n      cursor:pointer;\n      border-bottom: 1px solid #777;\n    }\n    #todo-list-wrapper ul li:last-child {\n      cursor:default;\n      border: none;\n    }\n    #todo-list-wrapper ul li:first-child {\n      cursor:default;\n      font-size: 1.2rem;\n    }\n\n    #todo-list-wrapper ul li div {\n      width: 20%;\n      text-align:left;\n    }\n\n    #todo-list-wrapper ul li img {\n      width: 100%;\n    }\n\n    #todo-list-wrapper ul li .item-bar {\n  \n      display: flex;\n      justify-content:center;\n      width: 90%;\n      height: 50px;\n      line-height: 50px;\n    }\n\n    #todo-list-wrapper ul li .item-bar div {\n\n    }\n\n\n\n  \n    `,\n  ],\n})\nexport class OptimizedListComponent implements OnInit {\n  public optList: outputItem[]\n  public re: RegExp\n  public goalname_map: {}\n  public goal_map: {}\n  public finalList = [];\n  public final_optList = [];\n\n\n  constructor(public router: Router, private activatedRoute: ActivatedRoute, public itemService: ItemService) {\n    this.optList = Globals.optTaskList;\n    this.re = /[\\s]?[(]takes about[\\s]?[0-9]+[\\s]?[a-z]*[\\s]?[a-z]*[\\s]?[0-9]*[\\s]?[a-z]*[)]/;\n\n    console.log('In optimized page constructor');\n    console.log(this.optList);\n    // console.log(\"length\");\n    // console.log(this.optList.length>0);\n  }\n\n  ngOnInit() {\n    console.log(\"In Running Algo\");\n    this.optList = this.activatedRoute.snapshot.data['optList'];\n    Globals.optTaskList = this.optList;\n    console.log('API finished. In optimed page');\n    console.log(this.optList);\n\n    this.goalname_map = this.itemService.goalname_map\n    console.log(\"goalname_map: \", this.goalname_map)\n    this.goal_map = this.itemService.goal_map;\n    console.log(\"goal_map: \", this.goal_map)\n\n\n    //check optList, remove duplicated goals {g2, g1, g1, g2, g1} -> {g2, g1}\n\n    console.log(\"1 final List: \", this.finalList);\n    for (let i = 0; i < this.optList.length; i++) {\n      var temp = this.optList[i][\"id\"].slice(0, 2);\n      if (!this.finalList.includes(temp)) {\n        this.finalList.push(temp);\n      }\n      console.log(\"final List: \", this.finalList); // in the suggested order for users to follow\n    }\n\n    this.getGoalname(this.finalList);\n    // this.itemService.getOptimalList().subscribe((optList)=> {\n    //   console.log(\"RUNNING\");\n    //   Globals.optTaskList = optList;\n    //   console.log(optList);\n    // })\n\n  }\n\n  toggleOpacity(e) {\n\n    let ele = e.target.closest('li')\n\n    if (ele.getAttribute('checked') == 'true') {\n\n      ele.style.opacity = '1'\n\n      ele.setAttribute('checked', 'false')\n    }\n    else {\n\n      ele.style.opacity = '.3'\n\n      ele.setAttribute('checked', 'true')\n    }\n  }\n\n  titleCase(str) {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(' ');\n  }\n\n  getTagRegex(tag) {\n    return tag.exec('(?:\\b|)');\n  }\n\n  getHumanReadable(item_name) {\n    item_name = this.re[Symbol.replace](item_name, \"\");\n    let prefix = /[0-9]*[)]?[\\s]?/;\n    item_name = prefix[Symbol.replace](item_name, \"\");\n    // console.log('After Regex Name Removing )');\n    // console.log(item_name);\n    return item_name;\n  }\n\n  getTime(item_name) {\n    let time = this.re[Symbol.match](item_name).toString();\n    let prefix = /[\\s]?[(]takes about[\\s]?/;\n    time = prefix[Symbol.replace](time, \"\");\n    let suffix = /[)]/;\n    time = suffix[Symbol.replace](time, \"\");\n    // console.log('After Regex Time');\n    // console.log(time);\n    return time\n  }\n\n  getGoalname(finalList) {\n    //display a prioritized list\n    console.log(\"finalList (in getGoalname): \", finalList);\n\n    let final_optList = [];\n    for (let i = 0; i < finalList.length; i++) {\n      //final_optList.push(i+1 + \" \" +this.goalname_map[finalList[i].slice(1,) - 1]);\n      final_optList.push(i+1 + \" \" +this.goal_map[finalList[i].slice(1,) - 1]);\n    }\n    console.log(\"goalname_map: \", this.goalname_map);\n    console.log(\"goal_map \", this.goal_map);\n    console.log(\"final opt List: \", final_optList);\n    return final_optList;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { Globals } from \"../globals\";\n\n@Injectable() \nexport class ItemService {\n    // private gamifyUrl: string = 'http:///127.0.0.1:6789/api/constant/basic/30/14/inf/0/7000/0/60/t/2/10/tree/u123/getTasksForToday'\n    private gamifyUrl: string = 'https://aqueous-hollows-34193.herokuapp.com/api/smdp/mdp/30/14/inf/0/inf/0/inf/false/0/max/0.999999/0.1/2/1.39/0.0001/0.01/tree/__test__/getTasksForToday'\n    constructor(private http: HttpClient) {}\n\n    public goalname_map = {};//add a goalname map\n    public goal_map ={}; //add a goalmap for all info\n\n    makeProject() {\n        console.log(\"In makeProject\");\n        let project = [];\n        for (let i = 1; i < Globals.goalList.length+1; i++){\n            console.log(i);\n            var node = {\n                id: \"g\"+ i,\n                nm: \"#CG\" + i + \"_\" + Globals.goalList[i-1].name + \" ==\" + Globals.goalList[i-1].value + \" ~~\" + Globals.goalList[i-1].time_est + \"h DUE:\" + Globals.goalList[i-1].deadline,\n                lm: 0,\n                ch: null,\n                parentId: \"None\"\n              }\n            this.goalname_map[i-1]=Globals.goalList[i-1].name;//update a goalname map\n            this.goal_map[i-1]=Globals.goalList[i-1].name + \"/ Value: \"+ Globals.goalList[i-1].value + \"/ Time Estimation: \"+ Globals.goalList[i-1].time_est + \"h/ Deadline: \" + Globals.goalList[i-1].deadline; //update a goalmap\n            if ('num_children' in Globals.goalList[i-1] && Globals.goalList[i-1].num_children > 0){\n                node.ch = [];\n                for (let j = 1; j < Globals.goalList[i-1].num_children+1; j++){\n                    let td = Globals.goalList[i-1].tasks[j-1].today ? \" #today\": \" #future\";\n                    var task = {\n                        id: \"g\"+ i + \"-t\" + j,\n                        nm: Globals.goalList[i-1].tasks[j-1].name + \" ~~\" + Globals.goalList[i-1].tasks[j-1].time_est + \"h\" + td,\n                        lm: 0,\n                        parentId: node.id\n                      }\n                    node.ch.push(task);\n                }\n            }\n            console.log(\"NODE\", node);\n            project.push(node);\n            console.log(\"Project\");\n            console.log(project);\n            console.log(\"String Project\");\n            JSON.stringify(project);\n            console.log(project);\n\n            console.log(\"print map of goal name__: \", this.goalname_map) //\n            console.log(\"print map of goalmap with goal info: \", this.goal_map)\n        }\n        return project;\n    }\n    //need to set GoalName_map ?\n    setGoalName_map(goalname_map){\n    this.goalname_map = goalname_map;\n    }\n    setGoal_map(goal_map){\n        this.goal_map = goal_map;\n        }\n    make_typical_hours() {\n        let list = [];\n        let obj = {\n            id: \"_\",\n            nm: \"#HOURS_TYPICAL ==12\",\n            lm: 0\n        };\n        list.push(obj);\n        JSON.stringify(list)\n        console.log('Typ Hours', list);\n        return list;\n    }\n\n    make_today_hours() {\n        let list = [];\n        let obj = {\n            id: \"_\",\n            nm: \"#HOURS_TODAY ==12\",\n            lm: 0\n        };\n        list.push(obj);\n        JSON.stringify(list)\n        console.log('Today Hours', list);\n        return list;\n    }\n    getOptimalList(): Observable<any> {\n        let list: {} = {}\n\n        // Globals.taskList.forEach(li => {\n        //     list[li.name.toLowerCase()] = li.amount\n        // })\n\n        const headers = new HttpHeaders({\n            'Content-Type': 'application/json',\n        })\n\n        const options = {\n            headers,\n        }\n        console.log(\"Making List to be sent to API\");\n        let project = this.makeProject();\n        console.log(\"Returned from makeProject\");\n        let typical_hours = this.make_typical_hours();\n        let today_hours = this.make_today_hours();\n        console.log(\"Make Today Hours\");\n        console.log(today_hours);\n        let body = {\n            currentIntentionsList: [],\n            projects: project,\n            timezoneOffsetMinutes: 0,\n            today_hours: today_hours, \n            typical_hours: typical_hours,\n            updated: 0,\n            userkey: '__test__',\n            bias: 683.2111000706025,\n            scale: 1.1,\n            time_frame: 480\n        };\n        console.log(\"Body of POST\");\n        console.log(body);\n        return this.http.post(this.gamifyUrl, body, options);\n\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ResolveGuard } from './guards/resolve.guard';\nimport { OptimizedListComponent } from './views/optimized-list.component';\n\nconst routes: Routes = [\n  {path: 'optimized',\n  component: OptimizedListComponent,\n  resolve: {\n    optList: ResolveGuard,\n  }\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"login\",\n  template: `\n  \n   \n  <div id=\"login-wrapper\">\n\n    <div style=\"text-align:center;\"><img style=\"height: 200px;\" src=\"./assets/images/logo.png\" /></div>\n\n    <div class=\"btn\" (click)=\"route()\">Start</div>\n \n\n  </div>\n\n\n\n  `,\n  styles: [\n    `\n\n    #login-wrapper {\n        display:flex;\n        align-items:center;\n        flex-direction: column;\n        text-align:center;\n    }\n    #login-wrapper img {\n\n        height: 100px;\n    }\n    #login-wrapper .btn {\n\n        margin-top: 20px;\n    }\n\n    `,\n  ],\n})\nexport class LoginComponent {\n\n  constructor(public router: Router) {\n\n  }\n\n  \n  public route(){\n\n    this.router.navigateByUrl('/list')\n  } \n}","import { Item, Goal, outputItem } from \"./views/item\"\n\n\n\nexport class Globals {\n\n    static taskList:Item[] = []\n    static goalList: Goal[] = []\n    static optTaskList:outputItem[] = []\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}